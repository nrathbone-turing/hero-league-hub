{
  "name": "hero-league-hub",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "lint:backend": "docker compose run --rm -w /app/backend backend flake8 --config=.flake8 app tests",
    "format:backend": "docker compose run --rm -w /app backend black backend/app backend/tests",
    "fix:backend": "npm run format:backend && npm run lint:backend",

    "test:backend": "cross-env FLASK_ENV=test TEST_DATABASE_URL=postgresql://postgres:postgres@db:5432/heroleague_test docker compose run --rm -w /app backend pytest -q --disable-warnings backend/tests",
    "test:frontend": "npm --prefix frontend run test",
    "test": "npm run test:backend && npm run test:frontend",

    "db:init": "docker compose run --rm backend flask --app backend/manage.py db init",
    "db:migrate": "docker compose run --rm backend flask --app backend/manage.py db migrate -m \"Auto migration\"",
    "db:upgrade": "docker compose run --rm backend flask --app backend/manage.py db upgrade",
    "db:seed": "docker compose run --rm backend python backend/manage.py seed-db",
    "db:reset": "npm run db:drop && npm run db:create && npm run db:upgrade && npm run db:seed",

    "start:frontend": "npm --prefix frontend run dev",
    "start:backend": "pipenv run python backend/wsgi.py",
    "dev:all": "docker compose down && docker compose up --build -d && npm run start:frontend",

    "env:test": "cross-env FLASK_ENV=test TEST_DATABASE_URL=postgresql://postgres:postgres@db:5432/heroleague_test",
    "env:local": "cross-env FLASK_ENV=development DATABASE_URL=postgresql://postgres:postgres@localhost:5432/heroleague",

    "deps:sync": "pipenv requirements > backend/requirements.txt",
    "deps:update": "pipenv update"
  },
  "devDependencies": {
    "eslint-plugin-vitest-globals": "^1.5.0",
    "history": "^5.3.0",
    "cross-env": "^7.0.3"
  }
}
